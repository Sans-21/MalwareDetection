import numpy as np
from math import sqrt, ceil
import cv2

#Input file name (random file I found in my folder).
input_file_name = '191e85467c65e5e382e384b39edeea61f4daad41c3c192d2be70e1c3ab2f0760';

#Read the whole file to data
with open(input_file_name, 'rb') as binary_file:        
    data = binary_file.read()

# Data length in bytes
data_len = len(data)

# d is a verctor of data_len bytes
d = np.frombuffer(data, dtype=np.uint8)

# Assume image shape should be close to square
sqrt_len = int(ceil(sqrt(data_len)))  # Compute square toot and round up

# Requiered length in bytes.
new_len = sqrt_len*sqrt_len

# Number of bytes to pad (need to add zeros to the end of d)
pad_len = new_len - data_len

# Pad d with zeros at the end.
# padded_d = np.pad(d, (0, pad_len))
padded_d = np.hstack((d, np.zeros(pad_len, np.uint8)))

# Reshape 1D array into 2D array with sqrt_len pad_len x sqrt_len (im is going to be a Grayscale image).
im = np.reshape(padded_d, (sqrt_len, sqrt_len))

# Save image
cv2.imwrite('detection_test_2/file/im.png', im)

from keras.preprocessing.image import ImageDataGenerator
batch_3 = ImageDataGenerator().flow_from_directory(directory='detection_test_2', target_size=(64,64), batch_size=10000)
image_2, label = next(batch_3)

import keras
Malware_detector = keras.models.load_model('malware_detector.h5')
y_pred_new = Malware_detector.predict(image_2, verbose=0)
print(y_pred_new)
position = np.where(y_pred_new == 1)
position_1 = position[1][0]
dictionary = {"0": "Adialer.C", "1": "Agent.FYI", "2": "Allaple.A", "3": "Allaple.L", "4": "Alueron.gen!J", "5": "Autorun.K", "6": "C2LOP.P", "7": "C2LOP.gen!g", "8": "Dialplatform.B", "9": "Dontovo.A", "10": "Fakerean", "11": "Instantaccess", "12": "Lolyda.AA1", "13": "Lolyda.AA2", "14": "Lolyda.AA3", "15": "Lolyda.AT", "16": "Malex.gen!J", "17": "Obfuscator.AD", "18": "Rbot!gen", "19": "Skintrim.N", "20": "Swizzor.gen!E", "21": "Swizzor.gen!I", "22": "VB.AT", "23": "Wintrim.BX", "24": "Yuner.A"}
type_detail = dictionary[str(position_1)]
type_malware = {'Dialer': ['Adialer.C', 'Dialplatform.B', 'Instantaccess'],
                'Backdoor': ['Agent.FYI', 'Rbot!gen'],
                'Worm': ['Allaple.A', 'Allaple.L', 'Alueron.gen!J', 'Autorun.k', 'AutoIT', 'VB.AT', 'Yuner.A'],
                'Trojan': ['C2LOP.P', 'C2LOP.gen!g', 'Malex.gen!J', 'Skintrim.N'],
                'Trojan Downloader': ['Dontovo.A', 'Obfuscator.AD', 'Swizzor.gen!E', 'Swizzor.gen!I', 'Wintrim.BX'],
                'PWS': ['Lolyda.AA1', 'Lolyda.AA2', 'Lolyda.AA3', 'Lolyda.AT']
                }

for i in type_malware:
    if type_detail in type_malware[i]:
        print(i)
        break